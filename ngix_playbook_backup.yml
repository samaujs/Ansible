# AWS playbook Example (YAML)
---

- hosts: Ngnixservers
  become: yes
  become_user: root
  gather_facts: False

  vars:
    key_name: aws_access
    region: ap-southeast-1 # us-east-2
    # ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20191114 with "ami-08b3278ea6e379084"
    # AMI "ami-08b3278ea6e379084" available only in "ap-southeast-1" region
    # AMI "ami-0f93b5fd8f220e428" available only in "us-east-2" region
    image: ami-08b3278ea6e379084 # ami-0f93b5fd8f220e428 # https://cloud-images.ubuntu.com/locator/ec2/
    id: "DApp_NGX"
    sec_group: "{{ id }}-sec-grp"
    ec2_instance_count: 2
    ec2_tag: "ansible_aws_deployment"
    ssh_port: 22

  tasks:

    - name: Gather Facts
      block:

      - name: Get instances facts
        # "ec2_instance_facts" is deprecated
        ec2_instance_info:  
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"

      tags: always

    - name: Install latest Ngnix remotely
      apt:
          name: nginx
          state: latest
          update_cache: yes

    - name: start nginx
      service:
          name: nginx
          state: started

    - name: Reboot machine after installation
      reboot:
          msg: "Reboot initiated by Ansible in AWS EC2"
          test_command: "whoami"

      tags: ['never', 'nginx']

# End of file
